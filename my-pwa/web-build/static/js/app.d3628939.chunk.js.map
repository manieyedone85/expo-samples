{"version":3,"sources":["App.tsx"],"names":["App","React","useState","selectedImage","setSelectedImage","selectedImageTemp","setSelectedImageTemp","style","styles","container","fontSize","fontWeight","onPress","a","async","ImagePicker","granted","Alert","alert","pickerRes","cancelled","uri","buttonUpload","color","alignItems","source","imageView","flexDirection","ImageManipulator","rotate","compress","format","PNG","manipulatorImage","buttonRotate90","flip","Horizontal","Vertical","StyleSheet","create","flex","backgroundColor","justifyContent","marginTop","paddingVertical","paddingHorizontal","borderRadius","width","height"],"mappings":"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","file":"static/js/app.d3628939.chunk.js","sourcesContent":["import * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Alert, Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nexport default function App() {\n  const [selectedImage, setSelectedImage] = React.useState(\"\");\n  const [selectedImageTemp, setSelectedImageTemp] = React.useState(\"\");\n\n  let openImagePickerAsync = async () => {\n    let permissionRes = await ImagePicker.requestCameraPermissionsAsync();\n    if (permissionRes.granted === false) {\n      Alert.alert(\"Failure!\", \"Permission to access camera roll is required!\");\n      return;\n    }\n    let pickerRes = await ImagePicker.launchImageLibraryAsync();\n\n    if (pickerRes.cancelled == false) {\n      setSelectedImage(pickerRes.uri);\n      setSelectedImageTemp(pickerRes.uri);\n    } else {\n      Alert.alert(\"Failure!\", \"upload a picture please!\");\n    }\n  }\n\n  const rotateImage = async () => {\n    const manipulatorImage = await ImageManipulator.manipulateAsync(\n      selectedImageTemp,\n      [{ rotate: 0 }],\n      { compress: 1, format: ImageManipulator.SaveFormat.PNG }\n    );\n    setSelectedImage(manipulatorImage.uri);\n  }\n\n  const rotateImage90 = async () => {\n    const manipulatorImage = await ImageManipulator.manipulateAsync(\n      selectedImageTemp,\n      [{ rotate: 90 }],\n      { compress: 1, format: ImageManipulator.SaveFormat.PNG }\n    );\n    setSelectedImage(manipulatorImage.uri);\n  }\n\n  const rotateImage180 = async () => {\n    const manipulatorImage = await ImageManipulator.manipulateAsync(\n      selectedImageTemp,\n      [{ rotate: 180 }],\n      { compress: 1, format: ImageManipulator.SaveFormat.PNG }\n    );\n    setSelectedImage(manipulatorImage.uri);\n  }\n\n  const rotateImage270 = async () => {\n    const manipulatorImage = await ImageManipulator.manipulateAsync(\n      selectedImageTemp,\n      [{ rotate: 270 }],\n      { compress: 1, format: ImageManipulator.SaveFormat.PNG }\n    );\n    setSelectedImage(manipulatorImage.uri);\n  }\n\n  const rotateImageFlipH = async () => {\n    const manipulatorImage = await ImageManipulator.manipulateAsync(\n      selectedImageTemp,\n      [{ flip: ImageManipulator.FlipType.Horizontal }],\n      { compress: 1, format: ImageManipulator.SaveFormat.PNG }\n    );\n    setSelectedImage(manipulatorImage.uri);\n  }\n\n  const rotateImageFlipV = async () => {\n    const manipulatorImage = await ImageManipulator.manipulateAsync(\n      selectedImageTemp,\n      [{ flip: ImageManipulator.FlipType.Vertical }],\n      { compress: 1, format: ImageManipulator.SaveFormat.PNG }\n    );\n    setSelectedImage(manipulatorImage.uri);\n  }\n  return (\n    <View style={styles.container}>\n      <Text style={{fontSize:20,fontWeight:\"bold\"}}>Welcome to Zero 2 publish</Text>\n      {\n        selectedImage == \"\" ? (\n          <View>\n            <TouchableOpacity\n              onPress={openImagePickerAsync}\n              style={styles.buttonUpload}>\n              <Text style={{ color: \"#eeb585\" }}> Upload Image</Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <View style={{ alignItems: \"center\" }}>\n            <Image source={{ uri: selectedImage }}\n              style={styles.imageView}\n            />\n            <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n              <TouchableOpacity\n                onPress={rotateImage90}\n                style={styles.buttonRotate90}>\n                <Text style={{ color: \"#eeb585\" }}> Right </Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity\n                onPress={rotateImage180}\n                style={styles.buttonRotate90}>\n                <Text style={{ color: \"#eeb585\" }}> Bottom</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={rotateImage270}\n                style={styles.buttonRotate90}>\n                <Text style={{ color: \"#eeb585\" }}> Left</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={rotateImage}\n                style={styles.buttonRotate90}>\n                <Text style={{ color: \"#eeb585\" }}> Reset</Text>\n              </TouchableOpacity>\n              </View>\n              <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n              <TouchableOpacity\n                onPress={rotateImageFlipH}\n                style={styles.buttonRotate90}>\n                <Text style={{ color: \"#eeb585\" }}> Flip Horizontal</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={rotateImageFlipV}\n                style={styles.buttonRotate90}>\n                <Text style={{ color: \"#eeb585\" }}> Flip Vertical</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        )\n      }\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonUpload: {\n    marginTop: 30,\n    paddingVertical: 20,\n    paddingHorizontal: 30,\n    borderRadius: 10,\n    backgroundColor: \"#000\"\n  },\n  buttonRotate90: {\n    marginTop: 30,\n    paddingVertical: 20,\n    paddingHorizontal: 30,\n    borderRadius: 10,\n    backgroundColor: \"#e2e2e2\"\n  },\n  imageView: {\n    width: 200,\n    height: 200,\n    marginTop: 20,\n    borderRadius: 10\n  }\n});\n"],"sourceRoot":""}